<html xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      i18n:domain="plonesurvey">
<body>
<div class="fieldWrapper"
     metal:define-macro="question"
     tal:define="qid question/getId;
                 helpid string:${qid}_help;
                 answer python: request.get(qid, None) or question.getAnswerFor(member_id)">

    <h2 class="questionTitle">
        <label tal:attributes="for qid"
               tal:content="question/Title" />
        <span class="fieldRequired"
              title="Required"
              tal:condition="python:question.getRequired() and (question.meta_type != 'SurveyTwoDimensionalQuestion')"
              i18n:translate="Required">(Required)</span>
    </h2>

    <div class="formHelp"
         tal:attributes="id helpid"
         tal:content="question/Description" />
        <div tal:condition="python:question.getBody() and question.getTextLocation() == 2"
             tal:content="structure question/getBody" />
    <div tal:define="hasOptions python: hasattr(question, 'getQuestionOptions') and len(question.getQuestionOptions()) > 0;
                     error errors/?qid|nothing"
         tal:attributes="class python:test(error, 'field error', 'field')">
        <div tal:content="error" />

        <tal:radio tal:condition="python: question.getInputType() == 'radio' and hasOptions"
                   tal:repeat="option question/getQuestionOptions">
            <div tal:attributes="class python:test(repeat['option'].odd(), 'odd optionRow', 'even optionRow')">                   
                <span  tal:omit-tag=""
                       class="noborder"
                       tal:define="value option;
                                       name qid;
                                       id string:${qid}-${repeat/option/number};
                                       checked python: option == answer;
                                       tabindex tabindex/next;" >
                <span i18n:translate=""
                       tal:content="python:test(same_type(option, 'string'), option, hasattr(question.getQuestionOptions(), 'getValue') and question.getQuestionOptions().getValue(option))"
                       tal:attributes="for string:${qid}-${repeat/option/number}; class python:test(checked,'rilievo', 'nonrilievo')" />
                </span>
            </div> 
        </tal:radio>

        <div
                tal:define="null_value question/getNullValue|nothing"
                tal:condition="python: question.getInputType() == 'selectionBox' and hasOptions"
                tal:attributes="name qid;
                                tabindex tabindex/next;
				class python:test(repeat['option'].odd(), 'odd optionRow', 'even optionRow');"
                tal:repeat="option question/getQuestionOptions">
              <span
                    class="noborder"
                    tal:define="value option;
                                    selected python: answer and option == answer;"
                    i18n:translate=""
                    tal:content="python:test(same_type(option, 'string'), option, hasattr(question.getQuestionOptions(), 'getValue') and question.getQuestionOptions().getValue(option))"
                    tal:attributes="class python:test(selected,'rilievo', 'nonrilievo')" /> 
        </div>

        <div    tal:condition="python: question.getInputType() == 'multipleSelect' and hasOptions"
                multiple="multiple"
                tal:attributes="name qid; tabindex tabindex/next; class python:test(repeat['option'].odd(), 'odd optionRow', 'even optionRow');"
                tal:repeat="option question/getQuestionOptions">
            <span
                    class="noborder"
                    value="option"
                    tal:define="value option;
                                    selected python: answer and option in answer;"
		    tal:attributes="class python:test(selected,'rilievo', 'nonrilievo')"
                    i18n:translate=""
                    tal:content="option">option
            </span>
        </div>

        <tal:checkbox tal:condition="python: question.getInputType() == 'checkbox' and hasOptions"
                      tal:repeat="option question/getQuestionOptions">
            <div tal:attributes="class python:test(repeat['option'].odd(), 'odd optionRow', 'even optionRow')">                      
                <span type="checkbox"
                       class="noborder"
                       name="answer"
                       value="option"
                       tal:define="value option;
                                       name qid;
                                       id string:${qid}-${repeat/option/number};
                                       checked python: answer and option in answer;
                                       tabindex tabindex/next;"
                       tal:condition="checked"
                         >
                 <strong i18n:translate="" tal:content="option" tal:attributes="for string:${qid}-${repeat/option/number}" />
                </span>
            </div>
        </tal:checkbox>

    </div>

    <div class="field"
         tal:condition="python:hasattr(question, 'getCommentType') and question.getCommentType()"
         tal:define="name string:${qid}_comments;
                     error errors/?qid_comments|nothing"
         tal:attributes="class python:test(error, 'field error', 'field')">

        <div tal:content="question/getCommentLabel">Comment - mandatory if "no"</div>

        <textarea cols="28"
                  rows="6"
                  tal:content="python:request.get(name,'') or question.getCommentsFor(member_id)"
                  tal:attributes="tabindex tabindex/next;
                                  name name"
                  tal:condition="python: question.getCommentType()=='area'" />
        <input type="text"
               tal:attributes="name name;
                               tabindex tabindex/next;
                               value python:request.get(name,'') or question.getCommentsFor(member_id)"
               tal:condition="python: question.getCommentType()=='text'"/>
    </div>
</div>
<dl metal:define-macro="display">
    <dt tal:content="question/Title" />
    <dd tal:content="python: question.getAnswerFor(member_id)" />
    <div tal:condition="python:hasattr(question, 'getCommentType') and question.getCommentType()"
         tal:omit-tag="">
        <dt>Comment</dt>
        <dd tal:content="python: question.getCommentsFor(member_id) or 'No Comment'" />
    </div>
</dl>
</body>
</html>
